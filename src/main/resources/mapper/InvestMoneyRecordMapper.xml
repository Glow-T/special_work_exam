<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.group.special_work_exam.dao.InvestMoneyRecordMapper" >
  <resultMap id="BaseResultMap" type="com.group.special_work_exam.bean.InvestMoneyRecord" >
    <id column="invest_id" property="investId" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="pay_total" property="payTotal" jdbcType="REAL" />
    <result column="sale_time" property="saleTime" jdbcType="TIMESTAMP" />
    <result column="sale_state" property="saleState" jdbcType="INTEGER" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    invest_id, userid, pay_type, pay_total, sale_time, sale_state, trade_no
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invest_money_record
    where invest_id = #{investId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invest_money_record
    where invest_id = #{investId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.group.special_work_exam.bean.InvestMoneyRecord" >
    insert into invest_money_record (invest_id, userid, pay_type, 
      pay_total, sale_time, sale_state, 
      trade_no)
    values (#{investId,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{payType,jdbcType=VARCHAR}, 
      #{payTotal,jdbcType=REAL}, #{saleTime,jdbcType=TIMESTAMP}, #{saleState,jdbcType=INTEGER}, 
      #{tradeNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.group.special_work_exam.bean.InvestMoneyRecord" >
    insert into invest_money_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="investId != null" >
        invest_id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payTotal != null" >
        pay_total,
      </if>
      <if test="saleTime != null" >
        sale_time,
      </if>
      <if test="saleState != null" >
        sale_state,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="investId != null" >
        #{investId,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payTotal != null" >
        #{payTotal,jdbcType=REAL},
      </if>
      <if test="saleTime != null" >
        #{saleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleState != null" >
        #{saleState,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.group.special_work_exam.bean.InvestMoneyRecord" >
    update invest_money_record
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payTotal != null" >
        pay_total = #{payTotal,jdbcType=REAL},
      </if>
      <if test="saleTime != null" >
        sale_time = #{saleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="saleState != null" >
        sale_state = #{saleState,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    where invest_id = #{investId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group.special_work_exam.bean.InvestMoneyRecord" >
    update invest_money_record
    set userid = #{userid,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_total = #{payTotal,jdbcType=REAL},
      sale_time = #{saleTime,jdbcType=TIMESTAMP},
      sale_state = #{saleState,jdbcType=INTEGER},
      trade_no = #{tradeNo,jdbcType=VARCHAR}
    where invest_id = #{investId,jdbcType=INTEGER}
  </update>
</mapper>